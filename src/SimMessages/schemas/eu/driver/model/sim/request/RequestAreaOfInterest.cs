// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen.exe, version 0.9.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace eu.driver.model.sim.request
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using Avro;
	using Avro.Specific;
	
	public partial class RequestAreaOfInterest : ISpecificRecord
	{
		public static Schema _SCHEMA = Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"RequestAreaOfInterest\",\"namespace\":\"eu.driver.model.sim." +
				"request\",\"fields\":[{\"name\":\"id\",\"doc\":\"Unique identifier of the request\",\"type\":" +
				"\"string\"},{\"name\":\"applicant\",\"doc\":\"Unique identifier of the connected applicat" +
				"ion sending the request\",\"type\":\"string\"},{\"name\":\"area\",\"doc\":\"list of location" +
				"s, creating an edge between every consecutive location in the list. An additiona" +
				"l edge is created between the last location in the list and the first location i" +
				"n the list, closing of the area. The smallest shape created by this boundary def" +
				"ines the areas of interest\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"nam" +
				"e\":\"Location\",\"namespace\":\"eu.driver.model.sim.support\",\"fields\":[{\"name\":\"latit" +
				"ude\",\"doc\":\"In decimal degrees, ranging from [-90, 90] where 0 is the equator\",\"" +
				"type\":\"double\"},{\"name\":\"longitude\",\"doc\":\"In decimal degrees, ranging from (-18" +
				"0, 180] where 0 is the Prime Meridian (line going through the geographic north, " +
				"Greenwich, and the geographic south)\",\"type\":\"double\"},{\"name\":\"altitude\",\"doc\":" +
				"\"Optional in meters, where 0 is the surface of the WGS84-based ellipsoid\",\"defau" +
				"lt\":null,\"type\":[\"null\",\"double\"]}]}}},{\"name\":\"response\",\"doc\":\"Optional respon" +
				"se of a connected application receiving this request\",\"default\":null,\"type\":[\"nu" +
				"ll\",{\"type\":\"record\",\"name\":\"Response\",\"namespace\":\"eu.driver.model.sim.support\"" +
				",\"fields\":[{\"name\":\"code\",\"doc\":\"Status code that best serves the response of th" +
				"e respondent, possibly similar to a HTTP response status code.\",\"type\":\"int\"},{\"" +
				"name\":\"message\",\"doc\":\"Optional information accompanying the response code\",\"def" +
				"ault\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"timestamp\",\"doc\":\"Optional UNIX Ep" +
				"och time in milliseconds marking the time the respond was given\",\"default\":null," +
				"\"type\":[\"null\",\"long\"],\"logicalType\":\"timestamp-millis\"}]}]}],\"_comment\":\"\"}");
		/// <summary>
		/// Unique identifier of the request
		/// </summary>
		private string _id;
		/// <summary>
		/// Unique identifier of the connected application sending the request
		/// </summary>
		private string _applicant;
		/// <summary>
		/// list of locations, creating an edge between every consecutive location in the list. An additional edge is created between the last location in the list and the first location in the list, closing of the area. The smallest shape created by this boundary defines the areas of interest
		/// </summary>
		private IList<eu.driver.model.sim.support.Location> _area;
		/// <summary>
		/// Optional response of a connected application receiving this request
		/// </summary>
		private eu.driver.model.sim.support.Response _response;
		public virtual Schema Schema
		{
			get
			{
				return RequestAreaOfInterest._SCHEMA;
			}
		}
		/// <summary>
		/// Unique identifier of the request
		/// </summary>
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				this._id = value;
			}
		}
		/// <summary>
		/// Unique identifier of the connected application sending the request
		/// </summary>
		public string applicant
		{
			get
			{
				return this._applicant;
			}
			set
			{
				this._applicant = value;
			}
		}
		/// <summary>
		/// list of locations, creating an edge between every consecutive location in the list. An additional edge is created between the last location in the list and the first location in the list, closing of the area. The smallest shape created by this boundary defines the areas of interest
		/// </summary>
		public IList<eu.driver.model.sim.support.Location> area
		{
			get
			{
				return this._area;
			}
			set
			{
				this._area = value;
			}
		}
		/// <summary>
		/// Optional response of a connected application receiving this request
		/// </summary>
		public eu.driver.model.sim.support.Response response
		{
			get
			{
				return this._response;
			}
			set
			{
				this._response = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.id;
			case 1: return this.applicant;
			case 2: return this.area;
			case 3: return this.response;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.id = (System.String)fieldValue; break;
			case 1: this.applicant = (System.String)fieldValue; break;
			case 2: this.area = (IList<eu.driver.model.sim.support.Location>)fieldValue; break;
			case 3: this.response = (eu.driver.model.sim.support.Response)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
