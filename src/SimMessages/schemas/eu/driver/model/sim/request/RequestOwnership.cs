// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen.exe, version 0.9.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace eu.driver.model.sim.request
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using Avro;
	using Avro.Specific;
	
	public partial class RequestOwnership : ISpecificRecord
	{
		public static Schema _SCHEMA = Avro.Schema.Parse(@"{""type"":""record"",""name"":""RequestOwnership"",""namespace"":""eu.driver.model.sim.request"",""fields"":[{""name"":""id"",""doc"":""Unique identifier of the request"",""type"":""string""},{""name"":""applicant"",""doc"":""Unique identifier of the connected application sending the request"",""type"":""string""},{""name"":""entity"",""doc"":""Unique identifier of the entity the applicant requests ownership over"",""type"":""string""},{""name"":""ownershipType"",""doc"":""The type of ownership that is requested"",""type"":{""type"":""enum"",""name"":""OwnershipType"",""namespace"":""eu.driver.model.sim.support"",""symbols"":[""TakeOver"",""TakeOverAndReturn"",""Alter""]}},{""name"":""response"",""doc"":""Optional response of a connected application receiving this request"",""default"":null,""type"":[""null"",{""type"":""record"",""name"":""Response"",""namespace"":""eu.driver.model.sim.support"",""fields"":[{""name"":""code"",""doc"":""Status code that best serves the response of the respondent, possibly similar to a HTTP response status code."",""type"":""int""},{""name"":""message"",""doc"":""Optional information accompanying the response code"",""default"":null,""type"":[""null"",""string""]},{""name"":""timestamp"",""doc"":""Optional UNIX Epoch time in milliseconds marking the time the respond was given"",""default"":null,""type"":[""null"",""long""],""logicalType"":""timestamp-millis""}]}]}],""_comment"":""""}");
		/// <summary>
		/// Unique identifier of the request
		/// </summary>
		private string _id;
		/// <summary>
		/// Unique identifier of the connected application sending the request
		/// </summary>
		private string _applicant;
		/// <summary>
		/// Unique identifier of the entity the applicant requests ownership over
		/// </summary>
		private string _entity;
		/// <summary>
		/// The type of ownership that is requested
		/// </summary>
		private eu.driver.model.sim.support.OwnershipType _ownershipType;
		/// <summary>
		/// Optional response of a connected application receiving this request
		/// </summary>
		private eu.driver.model.sim.support.Response _response;
		public virtual Schema Schema
		{
			get
			{
				return RequestOwnership._SCHEMA;
			}
		}
		/// <summary>
		/// Unique identifier of the request
		/// </summary>
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				this._id = value;
			}
		}
		/// <summary>
		/// Unique identifier of the connected application sending the request
		/// </summary>
		public string applicant
		{
			get
			{
				return this._applicant;
			}
			set
			{
				this._applicant = value;
			}
		}
		/// <summary>
		/// Unique identifier of the entity the applicant requests ownership over
		/// </summary>
		public string entity
		{
			get
			{
				return this._entity;
			}
			set
			{
				this._entity = value;
			}
		}
		/// <summary>
		/// The type of ownership that is requested
		/// </summary>
		public eu.driver.model.sim.support.OwnershipType ownershipType
		{
			get
			{
				return this._ownershipType;
			}
			set
			{
				this._ownershipType = value;
			}
		}
		/// <summary>
		/// Optional response of a connected application receiving this request
		/// </summary>
		public eu.driver.model.sim.support.Response response
		{
			get
			{
				return this._response;
			}
			set
			{
				this._response = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.id;
			case 1: return this.applicant;
			case 2: return this.entity;
			case 3: return this.ownershipType;
			case 4: return this.response;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.id = (System.String)fieldValue; break;
			case 1: this.applicant = (System.String)fieldValue; break;
			case 2: this.entity = (System.String)fieldValue; break;
			case 3: this.ownershipType = (eu.driver.model.sim.support.OwnershipType)fieldValue; break;
			case 4: this.response = (eu.driver.model.sim.support.Response)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
