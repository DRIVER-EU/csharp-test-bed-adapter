// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen.exe, version 0.9.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace eu.driver.model.mlp
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using Avro;
	using Avro.Specific;
	
	public partial class Coord : ISpecificRecord
	{
		public static Schema _SCHEMA = Avro.Schema.Parse(@"{""type"":""record"",""name"":""Coord"",""namespace"":""eu.driver.model.mlp"",""fields"":[{""name"":""X"",""doc"":""The first coordinate in a coordinate system (30 27 45.3N)"",""type"":""string""},{""name"":""Y"",""doc"":""Second ordinate in a coordinate.system (45 25 52.9E). This is optional if it is a linear coordinate system."",""default"":null,""type"":[""null"",""string""]},{""name"":""Z"",""doc"":""Third ordinate in a coordinate system which has at least three ordinates."",""default"":null,""type"":[""null"",""string""]}]}");
		/// <summary>
		/// The first coordinate in a coordinate system (30 27 45.3N)
		/// </summary>
		private string _X;
		/// <summary>
		/// Second ordinate in a coordinate.system (45 25 52.9E). This is optional if it is a linear coordinate system.
		/// </summary>
		private string _Y;
		/// <summary>
		/// Third ordinate in a coordinate system which has at least three ordinates.
		/// </summary>
		private string _Z;
		public virtual Schema Schema
		{
			get
			{
				return Coord._SCHEMA;
			}
		}
		/// <summary>
		/// The first coordinate in a coordinate system (30 27 45.3N)
		/// </summary>
		public string X
		{
			get
			{
				return this._X;
			}
			set
			{
				this._X = value;
			}
		}
		/// <summary>
		/// Second ordinate in a coordinate.system (45 25 52.9E). This is optional if it is a linear coordinate system.
		/// </summary>
		public string Y
		{
			get
			{
				return this._Y;
			}
			set
			{
				this._Y = value;
			}
		}
		/// <summary>
		/// Third ordinate in a coordinate system which has at least three ordinates.
		/// </summary>
		public string Z
		{
			get
			{
				return this._Z;
			}
			set
			{
				this._Z = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.X;
			case 1: return this.Y;
			case 2: return this.Z;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.X = (System.String)fieldValue; break;
			case 1: this.Y = (System.String)fieldValue; break;
			case 2: this.Z = (System.String)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
