// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen.exe, version 0.9.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace eu.driver.model.emsi
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using Avro;
	using Avro.Specific;
	
	public partial class EVACEVENT : ISpecificRecord
	{
		public static Schema _SCHEMA = Avro.Schema.Parse(@"{""type"":""record"",""name"":""EVACEVENT"",""namespace"":""eu.driver.model.emsi"",""fields"":[{""name"":""DATIME"",""type"":[""null"",""long""],""source"":""element DATIME""},{""name"":""DISPLACED"",""type"":[""null"",""string""],""source"":""element DISPLACED""},{""name"":""EVACUATED"",""type"":[""null"",""string""],""source"":""element EVACUATED""}]}");
		private System.Nullable<long> _DATIME;
		private string _DISPLACED;
		private string _EVACUATED;
		public virtual Schema Schema
		{
			get
			{
				return EVACEVENT._SCHEMA;
			}
		}
		public System.Nullable<long> DATIME
		{
			get
			{
				return this._DATIME;
			}
			set
			{
				this._DATIME = value;
			}
		}
		public string DISPLACED
		{
			get
			{
				return this._DISPLACED;
			}
			set
			{
				this._DISPLACED = value;
			}
		}
		public string EVACUATED
		{
			get
			{
				return this._EVACUATED;
			}
			set
			{
				this._EVACUATED = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.DATIME;
			case 1: return this.DISPLACED;
			case 2: return this.EVACUATED;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.DATIME = (System.Nullable<long>)fieldValue; break;
			case 1: this.DISPLACED = (System.String)fieldValue; break;
			case 2: this.EVACUATED = (System.String)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
