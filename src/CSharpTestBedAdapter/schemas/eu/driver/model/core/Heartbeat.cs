// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen.exe, version 0.9.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace eu.driver.model.core
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using Avro;
	using Avro.Specific;
	
	public partial class Heartbeat : ISpecificRecord
	{
		public static Schema _SCHEMA = Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"Heartbeat\",\"namespace\":\"eu.driver.model.core\",\"fields\":[" +
				"{\"name\":\"id\",\"doc\":\"ID of the client\",\"type\":\"string\"},{\"name\":\"alive\",\"doc\":\"Da" +
				"te time string in ISO 8601 format\",\"type\":\"string\"}]}");
		/// <summary>
		/// ID of the client
		/// </summary>
		private string _id;
		/// <summary>
		/// Date time string in ISO 8601 format
		/// </summary>
		private string _alive;
		public virtual Schema Schema
		{
			get
			{
				return Heartbeat._SCHEMA;
			}
		}
		/// <summary>
		/// ID of the client
		/// </summary>
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				this._id = value;
			}
		}
		/// <summary>
		/// Date time string in ISO 8601 format
		/// </summary>
		public string alive
		{
			get
			{
				return this._alive;
			}
			set
			{
				this._alive = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.id;
			case 1: return this.alive;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.id = (System.String)fieldValue; break;
			case 1: this.alive = (System.String)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
