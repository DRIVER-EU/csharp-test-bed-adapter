// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen.exe, version 0.9.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace eu.driver.model.core
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using Avro;
	using Avro.Specific;
	
	public partial class Configuration : ISpecificRecord
	{
		public static Schema _SCHEMA = Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"Configuration\",\"namespace\":\"eu.driver.model.core\",\"field" +
				"s\":[{\"name\":\"clientId\",\"doc\":\"ID of the client\",\"type\":\"string\"},{\"name\":\"kafkaH" +
				"ost\",\"doc\":\"URI of the Kafka broker\",\"type\":\"string\"},{\"name\":\"schemaRegistry\",\"" +
				"doc\":\"URI of the schema registry\",\"type\":\"string\"},{\"name\":\"heartbeatInterval\",\"" +
				"doc\":\"Time in msec how often you send out a heartbeat. Default 5000\",\"default\":n" +
				"ull,\"type\":[\"null\",\"int\"]},{\"name\":\"consume\",\"doc\":\"Topics you are consuming\",\"d" +
				"efault\":null,\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Off" +
				"setFetchRequest\",\"namespace\":\"eu.driver.model.core\",\"fields\":[{\"name\":\"topic\",\"t" +
				"ype\":\"string\"},{\"name\":\"offset\",\"default\":null,\"type\":[\"null\",\"int\"]},{\"name\":\"p" +
				"artition\",\"default\":null,\"type\":[\"null\",\"int\"]}]}}]},{\"name\":\"produce\",\"doc\":\"To" +
				"pics you are producing\",\"default\":null,\"type\":[\"null\",{\"type\":\"array\",\"items\":\"s" +
				"tring\"}]},{\"name\":\"logging\",\"doc\":\"Logging details, may be replaced by an enum\"," +
				"\"default\":null,\"type\":[\"null\",{\"type\":\"record\",\"name\":\"LogSettings\",\"namespace\":" +
				"\"eu.driver.model.core\",\"fields\":[{\"name\":\"logToFile\",\"doc\":\"If set [0..5], log t" +
				"o file as specified in logFile\",\"default\":null,\"type\":[\"null\",\"int\"]},{\"name\":\"l" +
				"ogFile\",\"doc\":\"Name of the log file\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"" +
				"name\":\"logToConsole\",\"doc\":\"If set [0..5], log to console. Number indicates logg" +
				"ing level\",\"default\":null,\"type\":[\"null\",\"int\"]},{\"name\":\"logToKafka\",\"doc\":\"If " +
				"set [0..5], log to Kafka\",\"default\":null,\"type\":[\"null\",\"int\"]}]}]}]}");
		/// <summary>
		/// ID of the client
		/// </summary>
		private string _clientId;
		/// <summary>
		/// URI of the Kafka broker
		/// </summary>
		private string _kafkaHost;
		/// <summary>
		/// URI of the schema registry
		/// </summary>
		private string _schemaRegistry;
		/// <summary>
		/// Time in msec how often you send out a heartbeat. Default 5000
		/// </summary>
		private System.Nullable<int> _heartbeatInterval;
		/// <summary>
		/// Topics you are consuming
		/// </summary>
		private IList<eu.driver.model.core.OffsetFetchRequest> _consume;
		/// <summary>
		/// Topics you are producing
		/// </summary>
		private IList<System.String> _produce;
		/// <summary>
		/// Logging details, may be replaced by an enum
		/// </summary>
		private eu.driver.model.core.LogSettings _logging;
		public virtual Schema Schema
		{
			get
			{
				return Configuration._SCHEMA;
			}
		}
		/// <summary>
		/// ID of the client
		/// </summary>
		public string clientId
		{
			get
			{
				return this._clientId;
			}
			set
			{
				this._clientId = value;
			}
		}
		/// <summary>
		/// URI of the Kafka broker
		/// </summary>
		public string kafkaHost
		{
			get
			{
				return this._kafkaHost;
			}
			set
			{
				this._kafkaHost = value;
			}
		}
		/// <summary>
		/// URI of the schema registry
		/// </summary>
		public string schemaRegistry
		{
			get
			{
				return this._schemaRegistry;
			}
			set
			{
				this._schemaRegistry = value;
			}
		}
		/// <summary>
		/// Time in msec how often you send out a heartbeat. Default 5000
		/// </summary>
		public System.Nullable<int> heartbeatInterval
		{
			get
			{
				return this._heartbeatInterval;
			}
			set
			{
				this._heartbeatInterval = value;
			}
		}
		/// <summary>
		/// Topics you are consuming
		/// </summary>
		public IList<eu.driver.model.core.OffsetFetchRequest> consume
		{
			get
			{
				return this._consume;
			}
			set
			{
				this._consume = value;
			}
		}
		/// <summary>
		/// Topics you are producing
		/// </summary>
		public IList<System.String> produce
		{
			get
			{
				return this._produce;
			}
			set
			{
				this._produce = value;
			}
		}
		/// <summary>
		/// Logging details, may be replaced by an enum
		/// </summary>
		public eu.driver.model.core.LogSettings logging
		{
			get
			{
				return this._logging;
			}
			set
			{
				this._logging = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.clientId;
			case 1: return this.kafkaHost;
			case 2: return this.schemaRegistry;
			case 3: return this.heartbeatInterval;
			case 4: return this.consume;
			case 5: return this.produce;
			case 6: return this.logging;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.clientId = (System.String)fieldValue; break;
			case 1: this.kafkaHost = (System.String)fieldValue; break;
			case 2: this.schemaRegistry = (System.String)fieldValue; break;
			case 3: this.heartbeatInterval = (System.Nullable<int>)fieldValue; break;
			case 4: this.consume = (IList<eu.driver.model.core.OffsetFetchRequest>)fieldValue; break;
			case 5: this.produce = (IList<System.String>)fieldValue; break;
			case 6: this.logging = (eu.driver.model.core.LogSettings)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
